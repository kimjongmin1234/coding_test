369게임 
java
class Solution {
    public int solution(int order) {
        int answer = 0;
        String order_string = String.valueOf(order);
        for(int i=0;i<order_string.length();i++){
            char order_char = order_string.charAt(i);
            if(order_char == '3'||order_char == '6'||order_char == '9'){
                answer++;
            }
        }
        return answer;
    }
}

python
def solution(order):
    answer = 0
    ##order_string = (String)order string변환을 위해 str(변수) 사용
    order_string = str(order)
    ## 인덱스 컨트롤을 위해 len() 사용
    for i in range(len(order_string)):
        if order_string[i] == '3' or order_string[i] == '6' or order_string[i] == '9':
            ## java ||대신 or사용 + ++같은 증감연산자 대신 +=1 사용
            answer+=1
    return answer

배열의 평균값
java
import java.util.Arrays;
class Solution {
    public double solution(int[] numbers) {
        double answer = 0;
        answer = Arrays.stream(numbers).average().getAsDouble();
        //average() 메서드 = OptionalDouble을 반환
        //Optional 형태의 값을 추출하기위해 getAsDouble() 사용
        return answer;
    }
}
python
import numpy as numpy
##numpy : 배열 연산에 최적화된 라이브러리
def solution(numbers):
    answer = 0
    answer = float(numpy.mean(numbers))
    ## mean 메서드 : 배열의 평균을 구하는 numpy라이브러리의 함수
    ## 기본적인 retrun값이 double타입이지만 명시적으로 표기
    return answer

중복된 숫자 개수
java
import java.util.Arrays;
class Solution {
    public int solution(int[] array, int n) {
        int answer = 0;
        answer = (int)Arrays.stream(array).filter(a -> a==n).count();
        //count()는 long반환 : int로 형변환
        //filter메서드 = 각 요소가 조건문에 만족하는 요소만 남김
        return answer;
    }
}

python
def solution(array, n):
    answer = 0
    filter_array = filter(lambda a : a==n,array)
    ##lambda : 익명함수, 요소 a를 뽑아내 a와 n이 같은지 비교
    ##filter 메서드 : 배열요소중 조건에 맞는 요소만 필터링해 추출, 이터레이터 반환
    answer = len(list(filter_array))
    ## filter가 이터레이터 반환이기때문에 list(배열)로 형변환
    ## len() 메서드 : 요소의 개수를 세는 메서드
    return answer